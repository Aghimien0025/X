function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 26-Jun-2020 11:32:43.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 14xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 4xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [5.0527;1326.849966;0.016515884;0.016512529;0.106726864;2.330368347;0.658272836;74.29276944;5.757397261;44.19749035;12.93926803;0;0.02321;215.0915645];
x1_step1.gain = [0.0250092534237668;0.0234592179208156;2.46804861791202;4.57984991570775;2.2390902644324;0.0186089023963174;0.0328793901088113;0.0325151755607741;0.0123989997059648;0.0325151755131985;0.0123989997112686;3.22144191740223;2.96700688345597;0.000159651231086881];
x1_step1.ymin = -1;

% Layer 1
b1 = [13.89084120874530548;3.3860266066737434443;-1.7996889224620404857;-3.152851308853074741;-0.11924315486271384879;0.98680972516703724384;1.2869374450693531475;-2.2390197219065326451;-2.1884578779159866713;-0.11901906181089540182;-0.3953752049649784106;1.7145702122341115459;3.3162788594231802364;-2.1642209928842746081;0.17836213441888079667];
IW1_1 = [-15.954910384687556402 0.39771353914447055145 -1.8547477534337388771 0.17717252827556276285 0.78844731442586668546 2.1162102088931447064 0.54140519638584583273 -6.6036518559530943406 -0.8297521638272491451 5.9505637650942553307 -0.33509858314949930724 -0.13617739507543402677 -0.40020940531269200147 -0.081423637804147783181;-0.53973124787180060125 0.20241922511925669603 1.8532710974492494493 3.4190433793608763224 0.46911067283540858197 -7.902408952563279243 0.76154742858006729822 -0.30554909066002428064 1.2529985188256376194 -0.22184492710802158899 -0.070851385557511928348 4.7417643087554637304 -0.15505305722952314462 0.74493494785835145944;-2.7675344739560596707 2.3926236369390196934 -5.9102522077944339429 4.3120991554318219841 0.016060068486905450247 1.9263203053605055803 0.83554604442132773823 0.18220746124739664595 -0.42391044454643411754 -0.34250202894049713853 0.32516637371461104555 5.5512788212368793239 0.058264165558805980361 -1.5320691552896952281;0.30117999080184570948 0.56592089427256586642 5.7665110939871366824 -3.6575136585992975569 -0.46752793686475807577 1.0337103836829637515 -0.92166990811041116238 -0.3744102767095591755 -0.56604162805453239748 0.30097230281107478778 0.035692934629049530293 -5.662791583195895484 0.065421924300568479183 -0.59097970744600636372;2.0303005269791509768 5.3800043689295558025 1.1088866764224669659 4.6211654476680168457 0.44642878259893625792 -7.5569168024868291766 0.20789653323050211187 -3.7099111642886262175 0.31570811654048419603 3.2257431880210289954 0.36518094878556767169 5.1654406128874379434 -1.5619324082872352299 -0.25751704342941572623;0.10073626202228713744 0.28679705371823438487 3.1675135084871692825 0.45058646816803982205 0.6484765920851585097 -3.7679608247934472942 -0.26602002218333758998 -0.6088221533223281412 0.07109683738455035984 -0.3683223529230355564 -0.34412112811262146606 0.30454751870245544421 -0.52571803580726772509 0.02052395156318956998;-0.47120127802742262091 -1.8770180832660436909 8.86561669732019908 1.1825720393548477816 1.8755909833941903919 -10.426813450992225896 -0.15691466088004832335 0.7388715755344090752 0.89057489809968426453 -1.7020181638798828061 0.032320036994426398769 4.3030634812513719467 -0.35499608106515367911 -2.0307334817767732638;-1.481023408179539258 -2.2031855901859551672 -3.1060740103712558557 -3.0898462262144752444 0.27531213176979885127 9.9795645605621139396 0.33717657624062685739 1.2104888322029965231 1.3720044596563247818 -1.6032379372077087964 -1.3645688952224310775 -4.6917430969166016297 -0.98078312848859872108 -2.0705705363473563274;-1.2490509825331657101 0.41332646915422077694 -14.999500086617290506 0.021643541703610831572 -0.1253525549200840139 16.275196377938414116 0.25714796085014907101 -0.67914424445305343614 0.40100412323029260842 -0.18148038569887786631 0.43766295211021494227 -0.19823192764011010603 -0.60497614377925257312 -1.4365237496384524185;0.15964524240573491065 0.023438008124667009113 4.2783927319101806575 1.9135070050865983227 -0.11425647619749697281 -9.2998472485968992629 -0.39247269018555863695 0.384065059841324552 -0.37989400196802547427 0.77880216554659298378 -0.57241815171603793733 3.9965251511347523738 -0.74942338774333483453 0.22411252662592212603;-0.85588413223909209915 -1.6848264873954001963 6.3784120712757355065 -1.0062457660032508855 -1.1369479204322938681 -3.9391262794156900462 1.5887927156019874264 0.58295919726944278594 0.27940800227340184536 -0.076013152880812465129 -0.48245375022898528972 -3.3735210169415834613 -0.73524699483338396 -0.33185594071490787105;0.14323638160571772193 0.3228349467942623896 -4.8235667503490864405 0.50393603366166406232 -2.3902936765115621043 1.2270182778586062877 1.1595980383620838605 -0.33387651881546964727 -0.10608618386461811378 -0.53040491700679859299 0.0086895600734738787096 0.90763048827796788398 2.146381654051648713 1.0034755874202139214;0.15314900013722873573 0.81848163129296647167 6.3552950634986533629 5.8448532424789334527 1.8354304996213433032 -16.003432029377577805 -0.89379299234292453047 -0.080058035122338902512 0.10922020456918865583 0.58718945586710402651 -0.035885741232370482745 8.2826502490995892458 -1.3017480283031004351 0.22097802705675551049;0.32770823737779974927 -0.37250775928115104074 -0.21613255185328344998 -0.85752763534891529584 -0.40599324472004821862 -0.022765225912377576312 -0.73466728472540832051 -0.025584799792866645685 0.55787238718409026816 0.31784913841559336856 0.30297458862309867289 0.13627573761216571491 -0.054186117873275929657 0.19981851559533347906;0.76828108788629889681 2.4559523310090067838 4.8395499355810720488 3.2350815585024816912 -0.40353964000046887994 -12.361875717177305489 -1.9974561451635117759 -1.1482900110608340594 0.12569457192371435994 2.3541751819374434618 0.37173917543279222375 3.8865668663012344908 -0.42332579663508196344 2.9669377095791773513];

% Layer 2
b2 = [1.2068042622310501955;5.2198626483447760904;2.3685356016601843976;-0.010764415861467400287];
LW2_1 = [-1.4715749823427011211 0.66484088306535726876 1.6495516684661815088 0.5148884954829634486 -0.091312506389730513368 0.089572056180108772239 0.19632146456997673356 -0.094897001194640534516 -1.4768497254988401934 1.7867062303766050313 0.055079104617202501171 -0.14736133895614056399 -0.49917791211401912888 -2.0173418954264583647 0.10386216187633739994;-0.027169445496404261847 0.29619691592589786344 2.9043859635191302537 0.28455658316674425912 3.3268453133223414575 -0.53485129739221504153 -0.075480416922619072984 0.098170981864062048516 -1.5963696951103159005 -0.016038580129051335788 0.1344790191906906629 -0.2691933453313376523 -0.19885398930046560562 0.14509063019557605356 0.19723036719169914632;-2.5193151572942156236 -0.36930801709451094306 1.7743674249663092812 -0.24453162819716470211 0.29944605373061539133 1.1850706160840984715 0.067831878584544633148 -0.047674604319479542414 -1.3442626190154822741 1.5817540802867524619 0.0066876956998595483636 -0.20844643138243226788 -0.54125041558156061772 -1.8236965495227328571 0.24538716909123131638;0.05569237809234003217 0.58748605405999720919 0.96246951580528705694 0.74015388504947166037 0.77633287777329762491 -0.89084074526553680418 0.19257545383903698633 -0.033211365516839216894 -2.0973656157363342878 2.1124220550193339996 0.2127446464529239023 0.089558777708253725636 -0.10442253745959617639 -2.3852332889204683752 0.19833291298578248352];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0142099294464377;0.0126835385275615;0.012959158859596;0.0151368561212191];
y1_step1.xoffset = [40.80086573;40.58592215;44.61197953;58.49162765];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
